// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bbit_2_uzd.Models;

#nullable disable

namespace bbit_2_uzd.Migrations
{
    [DbContext(typeof(AppDatabaseConfig))]
    [Migration("20230308113137_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("ApartmentTenant", b =>
                {
                    b.Property<Guid>("TenantApartmentsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("TEXT");

                    b.HasKey("TenantApartmentsId", "TenantId");

                    b.HasIndex("TenantId");

                    b.ToTable("ApartmentTenant");
                });

            modelBuilder.Entity("bbit_2_uzd.Models.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Floor")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("FullArea")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LivingArea")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfTenants")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Apartments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cf265e7-a334-4922-96bf-ca636d23819b"),
                            Floor = 1,
                            FullArea = 70m,
                            HouseId = new Guid("03289cb6-6bdb-4176-8739-4b8cf3742412"),
                            LivingArea = 64.5m,
                            Number = 1,
                            NumberOfRooms = 3,
                            NumberOfTenants = 4
                        },
                        new
                        {
                            Id = new Guid("f22762d2-a33c-4446-957c-8732ea6cc8c0"),
                            Floor = 1,
                            FullArea = 70m,
                            HouseId = new Guid("03289cb6-6bdb-4176-8739-4b8cf3742412"),
                            LivingArea = 64.5m,
                            Number = 2,
                            NumberOfRooms = 1,
                            NumberOfTenants = 0
                        },
                        new
                        {
                            Id = new Guid("39f9537a-0fea-4a54-9aed-d8aa30e999ad"),
                            Floor = 2,
                            FullArea = 70m,
                            HouseId = new Guid("03289cb6-6bdb-4176-8739-4b8cf3742412"),
                            LivingArea = 64.5m,
                            Number = 3,
                            NumberOfRooms = 1,
                            NumberOfTenants = 0
                        },
                        new
                        {
                            Id = new Guid("d3a44494-e8fc-4c7d-ba7a-0a86d7120f7b"),
                            Floor = 2,
                            FullArea = 70m,
                            HouseId = new Guid("03289cb6-6bdb-4176-8739-4b8cf3742412"),
                            LivingArea = 64.5m,
                            Number = 4,
                            NumberOfRooms = 1,
                            NumberOfTenants = 0
                        },
                        new
                        {
                            Id = new Guid("302284f4-b5d9-4699-acc1-f5d408f5e23b"),
                            Floor = 3,
                            FullArea = 70m,
                            HouseId = new Guid("03289cb6-6bdb-4176-8739-4b8cf3742412"),
                            LivingArea = 64.5m,
                            Number = 5,
                            NumberOfRooms = 1,
                            NumberOfTenants = 0
                        });
                });

            modelBuilder.Entity("bbit_2_uzd.Models.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03289cb6-6bdb-4176-8739-4b8cf3742412"),
                            City = "Test",
                            Country = "TestaValsts",
                            Number = 1,
                            PostalCode = "TV-0001",
                            Street = "Default"
                        },
                        new
                        {
                            Id = new Guid("22203f2f-5a81-4463-a346-6d8191a6f59d"),
                            City = "Jelgava",
                            Country = "Lavia",
                            Number = 40,
                            PostalCode = "LV-3001",
                            Street = "Liela"
                        });
                });

            modelBuilder.Entity("bbit_2_uzd.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PersonalCode")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8a1b97c-ccda-4f61-8f71-22cb2cdf805c"),
                            DateOfBirth = new DateTime(1972, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janis.tests@fake.com",
                            IsOwner = true,
                            Name = "Janis",
                            PersonalCode = "000000-000001",
                            PhoneNumber = "+371 00000001",
                            Surname = "Tests"
                        },
                        new
                        {
                            Id = new Guid("322976c9-48ed-4cb9-abe4-c9626869e11f"),
                            DateOfBirth = new DateTime(1974, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anna.Tests@fake.com",
                            IsOwner = false,
                            Name = "Anna",
                            PersonalCode = "000000-000002",
                            PhoneNumber = "+371 00000002",
                            Surname = "Tests"
                        },
                        new
                        {
                            Id = new Guid("ef500529-dbee-40f9-88f0-0f7b9db9fdfa"),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Maris.tests@fake.com",
                            IsOwner = false,
                            Name = "Māris",
                            PersonalCode = "000000-000003",
                            PhoneNumber = "+371 00000003",
                            Surname = "Tests"
                        },
                        new
                        {
                            Id = new Guid("615f9588-e225-491e-b046-64b144e6a082"),
                            DateOfBirth = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            IsOwner = false,
                            Name = "Zane",
                            PersonalCode = "000000-000004",
                            PhoneNumber = "+371 00000004",
                            Surname = "Tests"
                        });
                });

            modelBuilder.Entity("ApartmentTenant", b =>
                {
                    b.HasOne("bbit_2_uzd.Models.Apartment", null)
                        .WithMany()
                        .HasForeignKey("TenantApartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbit_2_uzd.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bbit_2_uzd.Models.Apartment", b =>
                {
                    b.HasOne("bbit_2_uzd.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });
#pragma warning restore 612, 618
        }
    }
}
